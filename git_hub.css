/* config */
git config --global user.mail "email@example.ru" /* add config email */
git config --global user.name "somename" /* add config user name */
git config --list /* all config parametr list */
/* config */

/* work on local machine */
git init /* start work, create git folder */
git status /* status of all element, check changes  */
git add somefile.txt /* add all files to work list */
git add .   /* <-will add all files */
git rm -fr somefile.txt  /* remove some file or folder*/
git commit -m "my comment" /* save this work progress local */
/* work on local machine */

/* 
work with github.com
folder must be equal on local and github side
 */
git remote add somename https://github.com/Da99er/site.git  /* link to github.com directory */
git remote rm somename /* remove wrong github.com directory (then must: remote add somename http:// )  */
git push -u somename master   /* push to github server and save "-u"  from->to   */
git push  /* push if we have -u */

/* inforamation */
git log  /* information about our steps */
git log -p -2  /* -p, which shows the difference introduced in each commit. 2, which limits the output to only the last two entries */
git branch  /* show your line  */
git branch -la  /* show all lines  */
git diff /* show difference  width new changes*/
git show HEAD /* display everything the git command git log,plus the file changes */
git checkout HEAD somefile.txt /* Discards changes in the work directory will restore the file in your working directory to look exactly as it did when you last made a commit */
git reset HEAD somefile.txt /*Unstage file changes in the staging area. remove all changes from history and working directory */
M somefile.txt /* M -short modificate */
git reset 1234567 /* can be used to reset to a previous commit in your commit history. go to previous commit */


/*how to download folder from server*/
git clone https://url/* copy folder from server */

/*how to download changes from server*/
git remote -v /* list of all remotes */
git remote add somename https://github.com/Da99er/site.git /* now link have little name */
git fetch somename /* we can add --force */
git merge somename/master   /* we mergin two branch */

/* force pull */
git fetch --all 
git reset --hard somename/master /* usually origin master*/
git pull somename master /* usually origin master*/

ssh-keygen -t rsa -b 4096 -C "your_email@example.com" /* Creates a new ssh key, using the provided email as a label */

/* work with branches */
git branch /* list all a git project's branches */
git branch mynewbranch /* create new branch */
git checkout mynewbranch /* switch to another git branch */
git merge mynewbranch /* used to join file changes from one branch to another */
git branch -d mynewbranch /* will delete this branch */